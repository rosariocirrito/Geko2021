package it.sicilia.regione.gekoddd.geko.programmazione.web.supergab;

import it.sicilia.regione.gekoddd.geko.acl.FromOrganikoQryService;
import it.sicilia.regione.gekoddd.geko.acl.model.IncaricoGeko;
import it.sicilia.regione.gekoddd.geko.pianificazione.domain.areaStrategica.AreaStrategica;
import it.sicilia.regione.gekoddd.geko.pianificazione.domain.areaStrategica.AreaStrategicaQryService;
import it.sicilia.regione.gekoddd.geko.pianificazione.domain.obiettivoStrategico.ObiettivoStrategico;
import it.sicilia.regione.gekoddd.geko.programmazione.domain.associazObiettivi.AssociazObiettivi;
import it.sicilia.regione.gekoddd.geko.programmazione.domain.obiettivo.Obiettivo;
import it.sicilia.regione.gekoddd.geko.programmazione.domain.obiettivo.ObiettivoQryService;
import it.sicilia.regione.gekoddd.log.model.evento.Evento;
import it.sicilia.regione.gekoddd.log.model.evento.EventoService;
import it.sicilia.regione.gekoddd.session.domain.Menu;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

/**
 * @author Cirrito
 *
 */

@Controller
@RequestMapping("/superGabProg")
public class SuperGabProgrListController  {
	
	private Log log = LogFactory.getLog(SuperGabProgrListController.class);
	
	//
    @Autowired
    private ObiettivoQryService objServizi;
    
    @Autowired
    private AreaStrategicaQryService areaStrategicaQryServizi;
    
    @Autowired
    private FromOrganikoQryService fromOrganikoServizi;
    //@Autowired
    //private Menu menu;
    @Autowired
    private EventoService evtServizi;
    //
    public SuperGabProgrListController() { }
    
    //
    @InitBinder
    public void initBinder(WebDataBinder binder) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        dateFormat.setLenient(false);
        binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat,false));
    }
    
 
 
  //-----------------------Direttiva --------------------
    @RequestMapping(value="listDirettivaSuperGab/{anno}", method = RequestMethod.GET)
    public String listDirettivaSuperGabinetto(@PathVariable("anno") int anno, Model model) {
    	//List<AreaStrategica> listAreeStrategiche = areaStrategicaQryServizi.findByAnno(anno);
    	List<AreaStrategica> listAreeStrategiche = areaStrategicaQryServizi.findByAnno(anno);
    	/*
        for (AreaStrategica area : listAreeStrategiche){
        	if(!area.getObiettiviStrategici().isEmpty()){
        		for(ObiettivoStrategico stra : area.getObiettiviStrategici()){
        			if(!stra.getAssociazObiettivi().isEmpty()){
        				for(AssociazObiettivi assoc : stra.getAssociazObiettivi()){
            				Obiettivo apicale = assoc.getApicale();
            				IncaricoGeko inc = fromOrganikoServizi.findIncaricoById(apicale.getIncaricoID());
            				apicale.setResponsabile(inc.getDenominazioneDipartimento()
            						+" / "+inc.getDenominazioneStruttura()+ " - "+inc.getResponsabile()); 
            			}
        			}
        		}
        	}
        		
        }
        */
    	model.addAttribute("listAreeStrategiche", listAreeStrategiche); 
        model.addAttribute("anno", anno);
        //
        String pageName = "geko2019/programmazione/listDirettiva";
        model.addAttribute("pageName", pageName);
        return pageName;
    }  
    
    @RequestMapping(value="modifyDirettivaSuperGab/{anno}", method = RequestMethod.GET)
    public String modifyDirettivaSuperGabinetto(@PathVariable("anno") int anno, Model model) {
    	List<AreaStrategica> listAreeStrategiche = areaStrategicaQryServizi.findByAnno(anno);
        model.addAttribute("listAreeStrategiche", listAreeStrategiche); 
        model.addAttribute("anno", anno);
        //
        String pageName = "geko2019/programmazione/supergab/modifyDirettivaSuperGabinetto";
        model.addAttribute("pageName", pageName);
        return pageName;
    }  
    
    
    
 //  lista obiettivi e azioni apicali
    @RequestMapping(value="listPianificazioneApicaleIncaricoSuperGab/{anno}/{idIncarico}", method = RequestMethod.GET)
    public String listPianificazioneIncaricoApicaleControllerGet(
    		@PathVariable("anno") int anno, @PathVariable("idIncarico") int idIncarico, Model model) {
    	log.info("listPianificazioneIncaricoApicaleSuperGab");
    	
       	final IncaricoGeko incarico = fromOrganikoServizi.findIncaricoById(idIncarico);
    	List<Obiettivo> listObiettiviApicali = objServizi.findObiettiviApicaliDirettiAndSubordinatiByIncaricoIDAndAnno(idIncarico, anno);
    	//
    	model.addAttribute("dipartimento", incarico.denominazioneStruttura);
    	model.addAttribute("responsabile", incarico.responsabile);
        model.addAttribute("anno", anno);
        model.addAttribute("listObiettivi", listObiettiviApicali);
        if (null != incarico) {
            return "geko/programmazione/supergab/listPianificazioneIncaricoApicaleSuperGab";
        }
        else return "redirect:/ROLE_SUPERGABINETTO";
    }
    
 
 // visualizzazione errore nel comando
    @RequestMapping(value="errCmd/{idEvento}", method = RequestMethod.GET)
    public String errCmdManagerGet(@PathVariable("idEvento") int idEvento, Model model) {
        //
    	final Evento evento = evtServizi.findById(idEvento);
        model.addAttribute("evento", evento); 
        //
        final String viewName = "errComandoController";
        model.addAttribute("viewName", viewName); 
        //
        return "geko/programmazione/controller/"+viewName;
    }
 
    
} // ---------------------------------------------
